name: CI
on:
  push:
    branches:
    - master
    tags:
    - "v*"
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        JDK: ["8", "11"]
        SCALA_VERSION: ["2.11.12", "2.12.16", "2.13.6"]
    name: Test (JDK ${{ matrix.JDK }}, Scala ${{ matrix.SCALA_VERSION }})
    steps:
    - uses: actions/checkout@v3
    - uses: coursier/cache-action@v6
    - uses: coursier/setup-action@v1.2.0
      with:
        jvm: 8
      env:
        JDK: ${{ matrix.JDK }}
    - name: Compile
      run: |
        sbtn ++$SCALA_VERSION test
        sbtn ++$SCALA_VERSION test-proj-v1/publishLocal
        sbtn ++$SCALA_VERSION test-proj-v2/mimaReportBinaryIssues
        sbtn ++$SCALA_VERSION proj-v1-user/compile
      env:
        SCALA_VERSION: ${{ matrix.SCALA_VERSION }}

  fmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: coursier/cache-action@v6
    - uses: coursier/setup-action@v1.2.0
      with:
        jvm: 8
        apps: scalafmt
    - name: Check formatting
      run: scalafmt --test

  publish:
    needs: [test, fmt]
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: coursier/cache-action@v6
    - uses: coursier/setup-action@v1.2.0
      with:
        jvm: 8
    - uses: olafurpg/setup-gpg@v3
    - name: Release
      run: sbtn ci-release
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
